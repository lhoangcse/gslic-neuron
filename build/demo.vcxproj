<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{DB7E67F7-88B8-378E-927C-D87ECCE6E30E}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>demo</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 7.5.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Git\gSLICr\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">demo.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">demo</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Git\gSLICr\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">demo.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">demo</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Git\gSLICr\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">demo.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">demo</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Git\gSLICr\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">demo.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">demo</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;$(NVCUDASAMPLES_ROOT)/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;Debug\gSLICr_lib.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videostab300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_superres300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_stitching300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_shape300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_photo300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_objdetect300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_calib3d300d.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\x64\cudart_static.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;vfw32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjpegd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libwebpd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libpngd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libtiffd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjasperd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\IlmImfd.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\zlibd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\ippicvmt.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(NVCUDASAMPLES_ROOT)/common/lib/$(PlatformName);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Git/gSLICr/build/Debug/demo.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Git/gSLICr/build/Debug/demo.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaCompile>
      <CodeGeneration>compute_20,sm_20;compute_30,sm_30;compute_35,sm_35;compute_37,sm_37;compute_50,sm_50;compute_52,sm_52;</CodeGeneration>
      <Include>./;$(NVCUDASAMPLES_ROOT)/common/inc</Include>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;Release\gSLICr_lib.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videostab300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_superres300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_stitching300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_shape300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_photo300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_objdetect300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_calib3d300.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\x64\cudart_static.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300.lib;vfw32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjpeg.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libwebp.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libpng.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libtiff.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjasper.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\IlmImf.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\zlib.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\ippicvmt.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Git/gSLICr/build/Release/demo.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Git/gSLICr/build/Release/demo.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;MinSizeRel\gSLICr_lib.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videostab300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_superres300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_stitching300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_shape300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_photo300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_objdetect300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_calib3d300d.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\x64\cudart_static.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;vfw32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjpegd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libwebpd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libpngd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libtiffd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjasperd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\IlmImfd.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\zlibd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\ippicvmt.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Git/gSLICr/build/MinSizeRel/demo.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Git/gSLICr/build/MinSizeRel/demo.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;USING_CMAKE=1;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;D:\Git\opencv_3.0\build\include;D:\Git\opencv_3.0\build\include\opencv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;RelWithDebInfo\gSLICr_lib.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videostab300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_superres300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_stitching300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_shape300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_photo300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_objdetect300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_calib3d300d.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\lib\x64\cudart_static.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_features2d300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_ml300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_highgui300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_videoio300d.lib;vfw32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgcodecs300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjpegd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libwebpd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libpngd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libtiffd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\libjasperd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\IlmImfd.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_flann300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_video300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_imgproc300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_core300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\opencv_hal300d.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\zlibd.lib;D:\Git\opencv_3.0\build\x64\vc12\staticlib\ippicvmt.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Git/gSLICr/build/RelWithDebInfo/demo.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Git/gSLICr/build/RelWithDebInfo/demo.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="D:\Git\gSLICr\demo.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:/Git/gSLICr/build/gSLICr_lib.vcxproj">
      <Project>DB074409-27D5-3BFA-A2FC-97F857E08C0F</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 7.5.targets" />
  </ImportGroup>
</Project>